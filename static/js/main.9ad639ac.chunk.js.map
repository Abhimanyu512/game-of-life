{"version":3,"sources":["game.js","App.js","reportWebVitals.js","index.js"],"names":["cell_size","Cell","this","props","x","y","className","style","left","top","height","width","React","Component","Game","state","cells","interval","isRunning","handleclick","event","elOffset","getElementOffset","xOffset","clientX","yOffset","clientY","Math","floor","columns","rows","board","setState","createCells","handleClear","clearBoard","run","runIteration","stop","timeoutHandler","window","clearTimeout","intervalChange","target","value","newBoard","neighbourCount","getNeighbours","setTimeout","count","rect","boardRef","getBoundingClientRect","doc","document","documentElement","pageXOffset","clientLeft","pageYOffset","clientTop","push","backgroundSize","onClick","ref","n","map","cell","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sRAIMA,EAAY,GAIZC,E,4JACF,WAAS,IAAD,EACUC,KAAKC,MAAZC,EADH,EACGA,EAAEC,EADL,EACKA,EACT,OACI,qBAAKC,UAAY,OAAOC,MAAO,CACvBC,KAAK,GAAD,OAAKR,EAAUI,EAAE,EAAjB,MACJK,IAAI,GAAD,OAAKT,EAAUK,EAAE,EAAjB,MACHK,OAAO,GAAD,OAAIV,GAAJ,MACNW,MAAM,GAAD,OAAIX,GAAJ,a,GARNY,IAAMC,WAqLVC,E,kDAtKX,aAAc,IAAD,8BACT,gBAKAC,MAAQ,CACJC,MAAO,GACPC,SAAU,IACVC,WAAW,GATN,EA+CTC,YAAc,SAACC,GACX,IAAMC,EAAW,EAAKC,mBAChBC,EAAUH,EAAMI,QAAUH,EAASjB,EACnCqB,EAAUL,EAAMM,QAAUL,EAAShB,EACnCD,EAAIuB,KAAKC,MAAML,EAAQvB,GACvBK,EAAIsB,KAAKC,MAAMH,EAAQzB,GAC1BI,GAAK,GAAKA,GAAI,EAAKyB,SAAWxB,GAAI,GAAKA,GAAG,EAAKyB,OAE9C,EAAKC,MAAM1B,GAAGD,IAAM,EAAK2B,MAAM1B,GAAGD,IAEtC,EAAK4B,SAAS,CACVhB,MAAO,EAAKiB,iBA1DX,EA8DTC,YAAc,WACV,EAAKH,MAAQ,EAAKI,aAClB,EAAKH,SAAS,CACVhB,MAAO,EAAKiB,iBAjEX,EAqETG,IAAM,WACF,EAAKJ,SAAS,CACVd,WAAW,IAEf,EAAKmB,gBAzEA,EA4ETC,KAAO,WACH,EAAKN,SAAS,CACVd,WAAW,IAEZ,EAAKqB,iBACJC,OAAOC,aAAa,EAAKF,gBACzB,EAAKA,eAAiB,OAlFrB,EAsFTG,eAAiB,SAACtB,GACd,EAAKY,SAAS,CACVf,SAAUG,EAAMuB,OAAOC,SAxFtB,EA4FTP,aAAe,WAEX,IADA,IAAIQ,EAAW,EAAKV,aACZ9B,EAAE,EAAEA,EAAE,EAAKyB,KAAKzB,IAEpB,IAAI,IAAID,EAAE,EAAEA,EAAE,EAAKyB,QAAQzB,IAC3B,CACI,IAAI0C,EAAiB,EAAKC,cAAc,EAAKhB,MAAM3B,EAAEC,GAClD,EAAK0B,MAAM1B,GAAGD,GAGTyC,EAASxC,GAAGD,GADM,IAAnB0C,GAA2C,IAAnBA,EAOvB,EAAKf,MAAM1B,GAAGD,IAAyB,IAAnB0C,IACpBD,EAASxC,GAAGD,IAAK,GAIjC,EAAK2B,MAAQc,EACb,EAAKb,SAAS,CACVhB,MAAO,EAAKiB,gBAEhB,EAAKM,eAAiBC,OAAOQ,YAAW,WACpC,EAAKX,iBACN,EAAKtB,MAAME,WAvHT,EA0HT8B,cAAgB,SAAChB,EAAM3B,EAAEC,GACrB,IAAI4C,EAAQ,EAiBZ,OAhBG7C,GAAG,GAAKA,EAAE,EAAKyB,SAAWxB,EAAE,GAAG,GAAKA,EAAE,EAAE,EAAKyB,MAAQC,EAAM1B,EAAE,GAAGD,IAC/D6C,IACD7C,EAAE,GAAG,GAAKA,EAAE,EAAE,EAAKyB,SAAWxB,GAAG,GAAKA,EAAE,EAAKyB,MAAQC,EAAM1B,GAAGD,EAAE,IAC/D6C,IACD7C,GAAG,GAAKA,EAAE,EAAKyB,SAAWxB,EAAE,GAAG,GAAKA,EAAE,EAAE,EAAKyB,MAAQC,EAAM1B,EAAE,GAAGD,IAC/D6C,IACD7C,EAAE,GAAG,GAAKA,EAAE,EAAE,EAAKyB,SAAWxB,GAAG,GAAKA,EAAE,EAAKyB,MAAQC,EAAM1B,GAAGD,EAAE,IAC/D6C,IACD7C,EAAE,GAAG,GAAKA,EAAE,EAAE,EAAKyB,SAAWxB,EAAE,GAAG,GAAKA,EAAE,EAAE,EAAKyB,MAAQC,EAAM1B,EAAE,GAAGD,EAAE,IACrE6C,IACD7C,EAAE,GAAG,GAAKA,EAAE,EAAE,EAAKyB,SAAWxB,EAAE,GAAG,GAAKA,EAAE,EAAE,EAAKyB,MAAQC,EAAM1B,EAAE,GAAGD,EAAE,IACrE6C,IACD7C,EAAE,GAAG,GAAKA,EAAE,EAAE,EAAKyB,SAAWxB,EAAE,GAAG,GAAKA,EAAE,EAAE,EAAKyB,MAAQC,EAAM1B,EAAE,GAAGD,EAAE,IACrE6C,IACD7C,EAAE,GAAG,GAAKA,EAAE,EAAE,EAAKyB,SAAWxB,EAAE,GAAG,GAAKA,EAAE,EAAE,EAAKyB,MAAQC,EAAM1B,EAAE,GAAGD,EAAE,IACrE6C,IACGA,GA1IX,EAAKnB,KAAOpB,GACZ,EAAKmB,QAAUlB,GACf,EAAKoB,MAAQ,EAAKI,aAJT,E,8CAYT,WAEI,IADA,IAAIJ,EAAQ,GACJ1B,EAAE,EAAEA,EAAEH,KAAK4B,KAAKzB,IACxB,CACI0B,EAAM1B,GAAK,GACX,IAAI,IAAID,EAAE,EAAEA,EAAEF,KAAK2B,QAAQzB,IAEvB2B,EAAM1B,GAAGD,IAAK,EAGtB,OAAO2B,I,8BAGX,WACI,IAAMmB,EAAOhD,KAAKiD,SAASC,wBACrBC,EAAMC,SAASC,gBACrB,MAAM,CACFnD,EAAI8C,EAAK1C,KAAOgC,OAAOgB,YAAeH,EAAII,WAC1CpD,EAAI6C,EAAKzC,IAAM+B,OAAOkB,YAAeL,EAAIM,a,yBAIjD,WAEI,IADA,IAAI3C,EAAQ,GACJX,EAAE,EAAEA,EAAEH,KAAK4B,KAAKzB,IAEpB,IAAI,IAAID,EAAE,EAAEA,EAAEF,KAAK2B,QAAQzB,IAEpBF,KAAK6B,MAAM1B,GAAGD,IACbY,EAAM4C,KAAK,CAACxD,IAAEC,MAG1B,OAAOW,I,oBAmGX,WAAS,IAAD,OACGA,EAASd,KAAKa,MAAdC,MACP,OACA,gCACI,qBAAKV,UAAU,YACfC,MAAO,CAACI,MAtKV,IAsKwBD,OArKvB,IAqKuCmD,eAAe,GAAD,OAAK7D,EAAL,cAAoBA,EAApB,OACpD8D,QAAS5D,KAAKiB,YACd4C,IAAK,SAACC,GAAK,EAAKb,SAAWa,GAH3B,SAIKhD,EAAMiD,KAAI,SAAAC,GAAI,OAAK,cAAC,EAAD,CAAM9D,EAAG8D,EAAK9D,EAAGC,EAAG6D,EAAK7D,GAAzB,UAAoC6D,EAAK9D,EAAzC,YAA8C8D,EAAK7D,SAE3E,sBAAKC,UAAU,WAAf,uBACc,uBAAOsC,MAAO1C,KAAKa,MAAME,SAAUkD,SAAUjE,KAAKwC,iBADhE,QAGQxC,KAAKa,MAAMG,UACX,wBAAQZ,UAAU,SAASwD,QAAS5D,KAAKoC,KAAzC,kBACA,wBAAQhC,UAAU,SAASwD,QAAS5D,KAAKkC,IAAzC,mBAEJ,wBAAQ9B,UAAU,SAASwD,QAAS5D,KAAKgC,YAAzC,6B,GAjKDtB,IAAMC,WCVVuD,E,4JAPb,WACE,OACE,cAAC,EAAD,Q,GAHYxD,IAAMC,WCQTwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAAS2B,eAAe,SAM1BZ,M","file":"static/js/main.9ad639ac.chunk.js","sourcesContent":["//import { render } from '@testing-library/react';\r\nimport React from 'react'\r\nimport './game.css'\r\n\r\nconst cell_size = 20;\r\nconst width = 800;\r\nconst height = 600;\r\n\r\nclass Cell extends React.Component{\r\n    render(){\r\n        const {x,y} = this.props;\r\n        return(\r\n            <div className = \"Cell\" style={{\r\n                    left: `${cell_size*x+1}px`, \r\n                    top: `${cell_size*y+1}px`, \r\n                    height:`${cell_size - 1}px`, \r\n                    width:`${cell_size - 1}px`,\r\n            }} />\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.rows = height/cell_size;\r\n        this.columns = width/cell_size;\r\n        this.board = this.clearBoard();\r\n    }\r\n        state = {\r\n            cells: [],\r\n            interval: 100,\r\n            isRunning: false\r\n        }\r\n\r\n        clearBoard(){\r\n            let board = []\r\n            for(let y=0;y<this.rows;y++)\r\n            {\r\n                board[y] = [];\r\n                for(let x=0;x<this.columns;x++)\r\n                {\r\n                    board[y][x] = false;\r\n                }\r\n            }\r\n            return board;\r\n        }\r\n\r\n        getElementOffset(){\r\n            const rect = this.boardRef.getBoundingClientRect();\r\n            const doc = document.documentElement;\r\n            return{\r\n                x: (rect.left + window.pageXOffset) - doc.clientLeft,\r\n                y: (rect.top + window.pageYOffset) - doc.clientTop\r\n            };\r\n        }\r\n\r\n        createCells(){\r\n            let cells = [];\r\n            for(let y=0;y<this.rows;y++)\r\n            {\r\n                for(let x=0;x<this.columns;x++)\r\n                {\r\n                    if(this.board[y][x])\r\n                        cells.push({x,y});\r\n                }\r\n            }\r\n            return cells;\r\n        }\r\n\r\n        handleclick = (event)=>{\r\n            const elOffset = this.getElementOffset();\r\n            const xOffset = event.clientX - elOffset.x;\r\n            const yOffset = event.clientY - elOffset.y;\r\n            const x = Math.floor(xOffset/cell_size);\r\n            const y = Math.floor(yOffset/cell_size);\r\n            if(x >= 0 && x<= this.columns && y >=0 && y<=this.rows)\r\n            {\r\n                this.board[y][x] = !this.board[y][x];\r\n            }\r\n            this.setState({\r\n                cells: this.createCells()\r\n            });\r\n        }\r\n        \r\n        handleClear = () => {\r\n            this.board = this.clearBoard();\r\n            this.setState({\r\n                cells: this.createCells()\r\n            });\r\n        }\r\n\r\n        run = () => {\r\n            this.setState({\r\n                isRunning: true\r\n            });\r\n            this.runIteration()\r\n        }\r\n\r\n        stop = () => {\r\n            this.setState({\r\n                isRunning: false\r\n            });\r\n            if(this.timeoutHandler){\r\n                window.clearTimeout(this.timeoutHandler);\r\n                this.timeoutHandler = null;\r\n            }\r\n        }\r\n\r\n        intervalChange = (event) => {\r\n            this.setState({\r\n                interval: event.target.value\r\n            });\r\n        }\r\n\r\n        runIteration = () => {\r\n            let newBoard = this.clearBoard();\r\n            for(let y=0;y<this.rows;y++)\r\n            {\r\n                for(let x=0;x<this.columns;x++)\r\n                {\r\n                    let neighbourCount = this.getNeighbours(this.board,x,y);\r\n                    if(this.board[y][x])\r\n                    { \r\n                        if(neighbourCount === 2 || neighbourCount === 3)\r\n                            newBoard[y][x] = true;\r\n                        else\r\n                            newBoard[y][x] = false;\r\n                    }\r\n                    else\r\n                    {\r\n                        if(!this.board[y][x] && neighbourCount === 3)\r\n                            newBoard[y][x] = true;\r\n                    }\r\n                }\r\n            }\r\n            this.board = newBoard;\r\n            this.setState({\r\n                cells: this.createCells()\r\n            })\r\n            this.timeoutHandler = window.setTimeout(() => {\r\n                this.runIteration()\r\n            }, this.state.interval)\r\n        }\r\n\r\n        getNeighbours = (board,x,y)=>{\r\n            let count = 0;\r\n            if(x>=0 && x<this.columns && y+1>=0 && y+1<this.rows && board[y+1][x])\r\n                count++;\r\n            if(x+1>=0 && x+1<this.columns && y>=0 && y<this.rows && board[y][x+1])\r\n                count++;\r\n            if(x>=0 && x<this.columns && y-1>=0 && y-1<this.rows && board[y-1][x])\r\n                count++;\r\n            if(x-1>=0 && x-1<this.columns && y>=0 && y<this.rows && board[y][x-1])\r\n                count++;\r\n            if(x+1>=0 && x+1<this.columns && y+1>=0 && y+1<this.rows && board[y+1][x+1])\r\n                count++;\r\n            if(x+1>=0 && x+1<this.columns && y-1>=0 && y-1<this.rows && board[y-1][x+1])\r\n                count++;\r\n            if(x-1>=0 && x-1<this.columns && y+1>=0 && y+1<this.rows && board[y+1][x-1])\r\n                count++;\r\n            if(x-1>=0 && x-1<this.columns && y-1>=0 && y-1<this.rows && board[y-1][x-1])\r\n                count++;\r\n            return count;\r\n        }\r\n\r\n        render(){\r\n            const {cells} = this.state;\r\n            return(\r\n            <div>\r\n                <div className=\"gameboard\" \r\n                style={{width: width, height: height, backgroundSize: `${cell_size}px ${cell_size}px`}} \r\n                onClick={this.handleclick} \r\n                ref={(n)=>{this.boardRef = n;}}>\r\n                    {cells.map(cell => (<Cell x={cell.x} y={cell.y} key={`${cell.x},${cell.y}`}/>))}\r\n                </div>\r\n                <div className=\"controls\">\r\n                    interval: <input value={this.state.interval} onChange={this.intervalChange}/> msec\r\n                    {\r\n                        this.state.isRunning ?\r\n                        <button className=\"button\" onClick={this.stop}>Stop</button>:\r\n                        <button className=\"button\" onClick={this.run}>Start</button>\r\n                    }\r\n                    <button className=\"button\" onClick={this.handleClear}>Reset</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Game;","import './App.css';\nimport Game from './game';\nimport React from 'react';\n\nclass App extends React.Component{\n  render(){\n    return(\n      <Game />\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}